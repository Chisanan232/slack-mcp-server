# Production Release
# This workflow calls the centralized release process from the template project
name: release

on:
  push:
    branches:
      - master
    paths:
      - .github/tag_and_release/release-**
  workflow_dispatch:
    inputs:
      level:
        description: 'Release level'
        required: false
        default: 'auto'
        type: choice
        options:
          - auto
          - patch
          - minor
          - major
      python:
        description: 'Python package release'
        required: false
        default: 'auto'
        type: choice
        options:
          - auto
          - force
          - skip
      docker:
        description: 'Docker image release'
        required: false
        default: 'auto'
        type: choice
        options:
          - auto
          - force
          - skip
      docs:
        description: 'Documentation versioning'
        required: false
        default: 'auto'
        type: choice
        options:
          - auto
          - force
          - skip

permissions:
  contents: write
  packages: write
  id-token: write

concurrency:
  group: release-${{ github.ref_name }}
  cancel-in-progress: false

jobs:
  # Call the centralized complete release workflow
  release:
    name: Complete Release Process
    uses: Chisanan232/GitHub-Action_Reusable_Workflows-Python/.github/workflows/rw_release_complete.yaml@master
    with:
      level: ${{ inputs.level }}
      python: ${{ inputs.python }}
      docker: ${{ inputs.docker }}
      docs: ${{ inputs.docs }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      TEST_PYPI_API_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}

  # Summary job to report results
  release-summary:
    name: Release Summary
    runs-on: ubuntu-latest
    needs: release
    if: always()
    steps:
      - name: Report release results
        run: |
          echo "=== Production Release Summary ==="
          echo ""
          echo "Release Status: ${{ needs.release.result }}"
          echo "Version Released: ${{ needs.release.outputs.version }}"
          echo "Release Performed: ${{ needs.release.outputs.release_performed }}"
          echo "Python Released: ${{ needs.release.outputs.python_released }}"
          echo "Docker Released: ${{ needs.release.outputs.docker_released }}"
          echo "Docs Released: ${{ needs.release.outputs.docs_released }}"
          echo ""
          
          if [[ "${{ needs.release.result }}" == "success" && "${{ needs.release.outputs.release_performed }}" == "true" ]]; then
            echo "üéâ Production release completed successfully!"
            echo ""
            echo "üì¶ Released Artifacts:"
            if [[ "${{ needs.release.outputs.python_released }}" == "true" ]]; then
              echo "- Python Package: https://pypi.org/project/${{ github.repository_owner }}/${{ needs.release.outputs.version }}/"
            fi
            if [[ "${{ needs.release.outputs.docker_released }}" == "true" ]]; then
              echo "- Docker Images:"
              echo "  - DockerHub: docker.io/${{ github.repository }}:${{ needs.release.outputs.version }}"
              echo "  - GHCR: ghcr.io/${{ github.repository }}:${{ needs.release.outputs.version }}"
            fi
            if [[ "${{ needs.release.outputs.docs_released }}" == "true" ]]; then
              echo "- Documentation: Versioned documentation deployed"
            fi
          elif [[ "${{ needs.release.outputs.release_performed }}" == "false" ]]; then
            echo "‚ÑπÔ∏è No release was performed (intent evaluation determined no release needed)"
          else
            echo "‚ùå Release process failed. Check the workflow logs above."
            exit 1
          fi
