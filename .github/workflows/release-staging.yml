name: Staging Release
# This workflow calls the centralized staging release process from the template project

on:
  workflow_dispatch:
    inputs:
      level:
        description: 'Release level for staging'
        required: false
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  packages: write
  id-token: write

concurrency:
  group: release-staging-${{ github.ref_name }}
  cancel-in-progress: false

jobs:
  # Call the centralized complete staging release workflow
  staging:
    name: Complete Staging Release Process
    uses: Chisanan232/GitHub-Action_Reusable_Workflows-Python/.github/workflows/rw_release_staging_complete.yaml@master
    with:
      level: ${{ inputs.level }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      TEST_PYPI_API_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}

  # Summary job to report results
  staging-summary:
    name: Staging Release Summary
    runs-on: ubuntu-latest
    needs: staging
    if: always()
    steps:
      - name: Report staging results
        run: |
          echo "=== Staging Release Summary ==="
          echo ""
          echo "Staging Status: ${{ needs.staging.result }}"
          echo "Base Version: ${{ needs.staging.outputs.version }}"
          echo "RC Version: ${{ needs.staging.outputs.rc_version }}"
          echo "Staging Completed: ${{ needs.staging.outputs.staging_completed }}"
          echo ""
          
          if [[ "${{ needs.staging.result }}" == "success" && "${{ needs.staging.outputs.staging_completed }}" == "true" ]]; then
            echo "üéâ Staging release completed successfully!"
            echo ""
            echo "üì¶ Staging Artifacts:"
            echo "- Base Version: ${{ needs.staging.outputs.version }}"
            echo "- RC Version: ${{ needs.staging.outputs.rc_version }}"
            echo "- TestPyPI: https://test.pypi.org/project/${{ github.repository_owner }}/${{ needs.staging.outputs.version }}/"
            echo "- GHCR RC Image: ghcr.io/${{ github.repository }}:${{ needs.staging.outputs.rc_version }}"
            echo "- DockerHub RC Image: docker.io/${{ github.repository }}:${{ needs.staging.outputs.rc_version }}"
            echo "- Docs Preview: docs-preview branch"
            echo ""
            echo "üß™ Testing Instructions:"
            echo "1. Install from TestPyPI:"
            echo "   pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ ${{ github.repository_owner }}==${{ needs.staging.outputs.version }}"
            echo ""
            echo "2. Test RC Docker image:"
            echo "   docker run -p 8000:8000 ghcr.io/${{ github.repository }}:${{ needs.staging.outputs.rc_version }}"
            echo ""
            echo "3. Review documentation preview in docs-preview branch"
            echo ""
          else
            echo "‚ùå Staging process failed. Check the workflow logs above."
            exit 1
          fi
