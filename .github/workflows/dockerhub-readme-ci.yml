name: dockerhub-readme-ci

on:
  push:
    branches:
      - "master"
    paths:
#     For GitHub Action
      - ".github/workflows/dockerhub-readme-ci.yml"
#     For the README file for the Docker Hub
      - "README_DOCKERHUB.md"

  # For debug and test only
  pull_request:
    branches:
      - "master"
    paths:
#     For GitHub Action
      - ".github/workflows/dockerhub-readme-ci.yml"
#     For the README file for the Docker Hub
      - "README_DOCKERHUB.md"

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show resolved inputs (no secrets)
        run: |
          echo "REPO=chisanan232/slack-mcp-server"   # 建議用一個新 secret 明寫 <namespace>/<repo>
          echo "USER=chisanan232"     # 你的 Docker ID（不是 email）

      - name: Get JWT with username/token
        env:
          USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          TOKEN:    ${{ secrets.DOCKERHUB_README_UPDATE_TOKEN }}
        run: |
          set -euo pipefail
          JWT=$(curl -s -H 'Content-Type: application/json' \
            -d "{\"username\":\"${USERNAME}\",\"password\":\"${TOKEN}\"}" \
            https://hub.docker.com/v2/users/login/ | jq -r .token)
          if [ -z "$JWT" ] || [ "$JWT" = "null" ]; then
            echo "❌ Cannot obtain JWT. Username or token is wrong."
            exit 1
          fi
          echo "✅ Got JWT"
          echo "JWT=$JWT" >> $GITHUB_ENV

      - name: GET repository info (should be 200)
        env:
          REPO: chisanan232/slack-mcp-server  # e.g. bryantliu/slack-mcp-server  (全部小寫)
          JWT:  ${{ env.JWT }}
        run: |
          set -euo pipefail
          CODE=$(curl -s -o resp.json -w '%{http_code}' \
            -H "Authorization: JWT $JWT" \
            "https://hub.docker.com/v2/repositories/${REPO}/")
          echo "GET /v2/repositories/${REPO}/ -> HTTP $CODE"
          jq -r '.namespace,.name' resp.json || true
          cat resp.json | head -c 400 || true
          if [ "$CODE" = "404" ]; then
            echo "❌ Repository not found. REPO 字串不是實際的 <namespace>/<repo>。"
            exit 1
          fi
          if [ "$CODE" = "403" ]; then
            echo "❌ Forbidden. 這個 JWT 不是該 namespace 的擁有者/管理者。"
            exit 1
          fi
          if [ "$CODE" != "200" ]; then
            echo "❌ Unexpected status: $CODE"
            exit 1
          fi
          echo "✅ Repo exists and token can read it."

      - name: PATCH dry-run (expect 200 or 403)
        env:
          REPO: chisanan232/slack-mcp-server
          JWT:  ${{ env.JWT }}
        run: |
          # 不去改 full_description，避免真的寫入；改一個不存在欄位，看權限反應
          CODE=$(curl -s -o /dev/null -w '%{http_code}' -X PATCH \
            -H "Authorization: JWT $JWT" -H "Content-Type: application/json" \
            -d '{"_noop_test":"value"}' \
            "https://hub.docker.com/v2/repositories/${REPO}/")
          echo "PATCH test -> HTTP $CODE"
          if [ "$CODE" = "403" ]; then
            echo "❌ Forbidden：權限/命名空間不匹配（最常見：repo 在 org，但你用個人 token）。"
            exit 1
          fi
          echo "✅ PATCH 通道可用，改 README 理應會成功。"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_README_UPDATE_TOKEN }}

      - name: Update repo description in Docker Hub
        uses: peter-evans/dockerhub-description@1b9a80c056b620d92cedb9d9b5a223409c68ddfa # v5.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_README_UPDATE_TOKEN }}
          # Set your Docker Hub repository in the form <namespace>/<name>
          # If your Docker Hub repo name matches this GitHub repo name, this will work:
          repository: chisanan232/slack-mcp-server
          short-description: ${{ vars.DOCKER_HUB_SHORT_DESCRIPTION }}
          readme-filepath: ./TEST_README.md
#          readme-filepath: ./README_DOCKERHUB.md
