name: dockerhub-readme-ci

on:
  push:
    branches:
      - "master"
    paths:
#     For GitHub Action
      - ".github/workflows/dockerhub-readme-ci.yml"
#     For the README file for the Docker Hub
      - "README_DOCKERHUB.md"

  # For debug and test only
  pull_request:
    branches:
      - "master"
    paths:
#     For GitHub Action
      - ".github/workflows/dockerhub-readme-ci.yml"
#     For the README file for the Docker Hub
      - "README_DOCKERHUB.md"

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show resolved inputs (no secrets)
        run: |
          echo "REPO=chisanan232/slack-mcp-server"   # 建議用一個新 secret 明寫 <namespace>/<repo>
          echo "USER=chisanan232"     # 你的 Docker ID（不是 email）

      - name: Get JWT
        env:
          U: chisanan232
          P: ${{ secrets.DOCKERHUB_README_UPDATE_TOKEN }}
        run: |
          set -euo pipefail
          JWT=$(curl -s -H 'Content-Type: application/json' \
            -d "{\"username\":\"${U}\",\"password\":\"${P}\"}" \
            https://hub.docker.com/v2/users/login/ | jq -r .token)
          test -n "$JWT" -a "$JWT" != null || (echo "JWT empty"; exit 1)
          echo "JWT=$JWT" >> $GITHUB_ENV
          echo "✅ Got JWT for user: $U"

      - name: GET repo info (print owner & your perms)
        env:
          REPO: chisanan232/slack-mcp-server  # e.g. chisanan232/slack-mcp-server
          JWT:  ${{ env.JWT }}
        run: |
          set -euo pipefail
          curl -s -H "Authorization: JWT $JWT" \
            "https://hub.docker.com/v2/repositories/${REPO}/" | tee repo.json
          echo "---- parsed ----"
          echo -n "namespace: " && jq -r .namespace repo.json
          echo -n "name:      " && jq -r .name repo.json
          echo -n "owner:     " && jq -r '.user|tostring' repo.json
          echo -n "your perms:" && jq -r '.user_permissions|tostring' repo.json

      - name: PATCH real field (write then revert)
        env:
          REPO: chisanan232/slack-mcp-server
          JWT:  ${{ env.JWT }}
        run: |
          set -euo pipefail
          ORIG=$(curl -s -H "Authorization: JWT $JWT" \
            "https://hub.docker.com/v2/repositories/${REPO}/" | jq -r .full_description)
          NEW="TEMP TEST $(date -u +%Y-%m-%dT%H:%M:%SZ)"

          CODE=$(curl -s -o /dev/null -w '%{http_code}' -X PATCH \
            -H "Authorization: JWT $JWT" -H "Content-Type: application/json" \
            -d "{\"full_description\":\"${NEW}\"}" \
            "https://hub.docker.com/v2/repositories/${REPO}/")
          echo "PATCH full_description -> $CODE"
          # 若寫入成功，再把它改回去
          if [ "$CODE" = "200" ]; then
            curl -s -o /dev/null -w '%{http_code}' -X PATCH \
              -H "Authorization: JWT $JWT" -H "Content-Type: application/json" \
              -d "$(jq -n --arg v "$ORIG" '{full_description:$v}')" \
              "https://hub.docker.com/v2/repositories/${REPO}/"
            echo "✅ write succeeded (and reverted)"
          else
            echo "❌ write denied"
            exit 1
          fi

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: chisanan232
          password: ${{ secrets.DOCKERHUB_README_UPDATE_TOKEN }}

      - name: Update repo description in Docker Hub
        uses: peter-evans/dockerhub-description@1b9a80c056b620d92cedb9d9b5a223409c68ddfa # v5.0.0
        with:
          username: chisanan232
          password: ${{ secrets.DOCKERHUB_README_UPDATE_TOKEN }}
          # Set your Docker Hub repository in the form <namespace>/<name>
          # If your Docker Hub repo name matches this GitHub repo name, this will work:
          repository: chisanan232/slack-mcp-server
          short-description: ${{ vars.DOCKER_HUB_SHORT_DESCRIPTION }}
          readme-filepath: ./TEST_README.md
#          readme-filepath: ./README_DOCKERHUB.md
